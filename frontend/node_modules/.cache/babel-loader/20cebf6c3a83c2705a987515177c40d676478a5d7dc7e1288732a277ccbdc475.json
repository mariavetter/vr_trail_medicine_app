{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart Selection src file\n */\nimport { Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { indexFinder, getElement } from '../../common/utils/helper';\nimport { pointByIndex } from '../model/acc-base';\nimport { Index } from '../../common/model/base';\nimport { BaseSelection } from '../../common/user-interaction/selection';\nimport { selectionComplete } from '../../common/model/constants';\n/**\n * `AccumulationSelection` module handles the selection for accumulation chart.\n */\nvar AccumulationSelection = /** @class */function (_super) {\n  __extends(AccumulationSelection, _super);\n  function AccumulationSelection(accumulation) {\n    var _this = _super.call(this, accumulation) || this;\n    _this.accumulation = accumulation;\n    _this.renderer = accumulation.renderer;\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * Binding events for selection module.\n   */\n  AccumulationSelection.prototype.addEventListener = function () {\n    if (this.accumulation.isDestroyed) {\n      return;\n    }\n    //let cancelEvent: string = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n    this.accumulation.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.accumulation.on('click', this.mouseClick, this);\n  };\n  /**\n   * UnBinding events for selection module.\n   */\n  AccumulationSelection.prototype.removeEventListener = function () {\n    if (this.accumulation.isDestroyed) {\n      return;\n    }\n    this.accumulation.off(Browser.touchMoveEvent, this.mouseMove);\n    this.accumulation.off('click', this.mouseClick);\n  };\n  /**\n   * To initialize the private variables\n   */\n  AccumulationSelection.prototype.initPrivateVariables = function (accumulation) {\n    this.styleId = accumulation.element.id + '_ej2_chart_selection';\n    this.unselected = accumulation.element.id + '_ej2_deselected';\n    this.selectedDataIndexes = [];\n    this.rectPoints = null;\n  };\n  /**\n   * Invoke selection for rendered chart.\n   *\n   * @param {AccumulationChart} accumulation Define the chart to invoke the selection.\n   * @returns {void}\n   */\n  AccumulationSelection.prototype.invokeSelection = function (accumulation) {\n    this.initPrivateVariables(accumulation);\n    this.series = extend({}, accumulation.visibleSeries, null, true);\n    this.seriesStyles();\n    this.currentMode = accumulation.selectionMode;\n    this.selectDataIndex(this.concatIndexes(accumulation.selectedDataIndexes, this.selectedDataIndexes), accumulation);\n  };\n  /**\n   * To get series selection style by series.\n   */\n  AccumulationSelection.prototype.generateStyle = function (series, point) {\n    return series.selectionStyle || this.styleId + '_series_' + series.index + '_point_' + point;\n  };\n  /**\n   * To get series selection style while hovering legend\n   */\n  AccumulationSelection.prototype.generateLegendClickStyle = function (series, eventType) {\n    if (eventType === 'mousemove') {\n      this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n    } else if (eventType === 'click') {\n      this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n    }\n    return series.selectionStyle || this.styleId + '_series_' + series.index;\n  };\n  /**\n   * To get elements by index, series\n   */\n  AccumulationSelection.prototype.findElements = function (accumulation, series, index) {\n    return [this.getElementByIndex(index)];\n  };\n  /**\n   * To get series point element by index\n   */\n  AccumulationSelection.prototype.getElementByIndex = function (index) {\n    var elementId = this.control.element.id + '_Series_' + index.series + '_Point_' + index.point;\n    return document.getElementById(elementId);\n  };\n  /**\n   * To find the selected element.\n   *\n   * @return {void}\n   * @private\n   */\n  AccumulationSelection.prototype.isAlreadySelected = function (targetElement, eventType) {\n    if (eventType === 'mousemove') {\n      this.currentMode = this.accumulation.highlightMode;\n      this.highlightDataIndexes = [];\n      this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n    } else if (eventType === 'click') {\n      this.currentMode = this.accumulation.selectionMode;\n      this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n    }\n    if (this.accumulation.highlightMode !== 'None' && this.accumulation.selectionMode === 'None') {\n      if (eventType === 'click') {\n        return false;\n      }\n    }\n    if (this.accumulation.highlightMode !== 'None' && this.previousSelectedElement && this.previousSelectedElement[0]) {\n      var parentNodeId = targetElement.parentNode.id;\n      var isValidElement = void 0;\n      if (targetElement.parentNode) {\n        isValidElement = parentNodeId.indexOf('SeriesGroup') > 0 || parentNodeId.indexOf('SymbolGroup') > 0 ? true : false;\n      }\n      for (var i = 0; i < this.previousSelectedElement.length; i++) {\n        if (this.previousSelectedElement[i].hasAttribute('class')) {\n          if (this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1 && (isValidElement || eventType === 'click')) {\n            this.previousSelectedElement[i].removeAttribute('class');\n            this.addOrRemoveIndex(this.highlightDataIndexes, indexFinder(this.previousSelectedElement[i].id));\n          } else if (!isValidElement && this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1) {\n            this.performSelection(indexFinder(this.previousSelectedElement[i].id), this.accumulation, this.previousSelectedElement[i]);\n          }\n        }\n      }\n    }\n    return true;\n  };\n  /**\n   * To calculate selected elements on mouse click or touch\n   *\n   * @private\n   */\n  AccumulationSelection.prototype.mouseClick = function (accumulation, event) {\n    this.calculateSelectedElements(accumulation, event.target, event.type);\n  };\n  /**\n   * To calculate selected elements on mouse click or touch\n   *\n   * @private\n   */\n  AccumulationSelection.prototype.calculateSelectedElements = function (accumulation, targetEle, eventType) {\n    if (isNullOrUndefined(targetEle)) {\n      return;\n    }\n    if (accumulation.highlightMode === 'None' && accumulation.selectionMode === 'None' || targetEle.id.indexOf(accumulation.element.id + '_') === -1) {\n      return;\n    }\n    if (eventType === 'mousemove') {\n      if (!isNullOrUndefined(targetEle.parentNode) && targetEle.parentNode.hasAttribute('class') && (targetEle.parentNode.getAttribute('class').indexOf('highlight') > 0 || targetEle.parentNode.getAttribute('class').indexOf('selection') > 0)) {\n        return;\n      }\n    }\n    if (targetEle.getAttribute('id').indexOf('_connector_') > -1) {\n      return;\n    } else {\n      this.isAlreadySelected(targetEle, eventType);\n      if (targetEle.id.indexOf('_Series_') > -1 || targetEle.id.indexOf('_datalabel_') > -1) {\n        this.performSelection(indexFinder(targetEle.id), accumulation, targetEle);\n      }\n    }\n  };\n  /**\n   * To perform the selection process based on index and element.\n   */\n  AccumulationSelection.prototype.performSelection = function (index, accumulation, element) {\n    element = element.id.indexOf('datalabel') > -1 ? accumulation.getSeriesElement().childNodes[index.series].childNodes[index.point] : element;\n    switch (this.currentMode) {\n      case 'Point':\n        if (!isNaN(index.point)) {\n          this.selection(accumulation, index, [element]);\n          this.selectionComplete(accumulation, accumulation.series[0]);\n          this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        }\n        break;\n    }\n  };\n  /**\n   *  Method to get the selected data index\n   *\n   * @private\n   */\n  AccumulationSelection.prototype.selectionComplete = function (accumulation, series) {\n    var pointIndex;\n    var selectedPointValues = [];\n    for (var i = 0; i < this.selectedDataIndexes.length; i++) {\n      pointIndex = this.selectedDataIndexes[i].point;\n      if (!isNaN(pointIndex)) {\n        selectedPointValues.push({\n          x: series.dataSource[pointIndex][series.xName],\n          y: series.points[pointIndex].y,\n          seriesIndex: this.selectedDataIndexes[i].series,\n          pointIndex: pointIndex\n        });\n      }\n    }\n    var args = {\n      name: selectionComplete,\n      selectedDataValues: selectedPointValues,\n      cancel: false\n    };\n    accumulation.trigger(selectionComplete, args);\n  };\n  /**\n   * To select the element by index. Adding or removing selection style class name.\n   */\n  AccumulationSelection.prototype.selection = function (accumulation, index, selectedElements) {\n    if (!accumulation.isMultiSelect && this.styleId.indexOf('highlight') === -1 && accumulation.selectionMode !== 'None') {\n      this.removeMultiSelectEelments(accumulation, this.selectedDataIndexes, index, accumulation.series);\n    }\n    var className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n    if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id, index.point)) > -1) {\n      this.removeStyles(selectedElements, index);\n      if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n        this.addOrRemoveIndex(this.highlightDataIndexes, index);\n      } else {\n        this.addOrRemoveIndex(this.selectedDataIndexes, index);\n      }\n      if (accumulation.enableBorderOnMouseMove) {\n        var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n        if (!isNullOrUndefined(borderElement)) {\n          this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n        }\n      }\n    } else {\n      this.previousSelectedElement = accumulation.highlightMode !== 'None' ? selectedElements : [];\n      if (className.indexOf('selection') < 0) {\n        this.applyStyles(selectedElements, index);\n      }\n      if (accumulation.enableBorderOnMouseMove) {\n        var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n        if (!isNullOrUndefined(borderElement)) {\n          this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n          this.addSvgClass(borderElement, selectedElements[0].getAttribute('class'));\n        }\n      }\n      if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n        this.addOrRemoveIndex(this.highlightDataIndexes, index, true);\n      } else {\n        this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n      }\n    }\n  };\n  /**\n   * To redraw the selection process on accumulation chart refresh.\n   *\n   * @private\n   */\n  AccumulationSelection.prototype.redrawSelection = function (accumulation) {\n    var selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n    var highlightDataIndexes = extend([], this.highlightDataIndexes, null, true);\n    if (this.styleId.indexOf('highlight') > 0 && highlightDataIndexes.length > 0) {\n      this.removeSelectedElements(accumulation, this.highlightDataIndexes);\n      selectedDataIndexes = highlightDataIndexes;\n    } else {\n      this.removeSelectedElements(accumulation, this.selectedDataIndexes);\n    }\n    this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n    this.selectDataIndex(selectedDataIndexes, accumulation);\n  };\n  /**\n   * To remove the selected elements style classes by indexes.\n   */\n  AccumulationSelection.prototype.removeSelectedElements = function (accumulation, indexes) {\n    for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n      var index = indexes_1[_i];\n      this.removeStyles([this.getElementByIndex(index)], index);\n    }\n  };\n  /**\n   * To perform the selection for legend elements.\n   *\n   * @private\n   */\n  AccumulationSelection.prototype.legendSelection = function (accumulation, series, pointIndex, targetEle, eventType) {\n    if (eventType === 'mousemove') {\n      if (targetEle.id.indexOf('text') > 1) {\n        targetEle = getElement(targetEle.id.replace('text', 'shape'));\n      }\n      if (targetEle.hasAttribute('class') && (targetEle.getAttribute('class').indexOf('highlight') > -1 || targetEle.getAttribute('class').indexOf('selection') > -1)) {\n        return;\n      }\n      this.currentMode = this.accumulation.highlightMode;\n    }\n    var isPreSelected = this.isAlreadySelected(targetEle, eventType);\n    if (isPreSelected) {\n      //let element: Element = <Element>accumulation.getSeriesElement().childNodes[series as number].childNodes[pointIndex as number];\n      //let seriesStyle: string = this.generateLegendClickStyle(accumulation.visibleSeries[series as number], eventType);\n      var seriesElements = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n      this.selection(accumulation, new Index(series, pointIndex), [seriesElements]);\n      this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n    }\n  };\n  /**\n   * To select the element by selected data indexes.\n   */\n  AccumulationSelection.prototype.selectDataIndex = function (indexes, accumulation) {\n    var element;\n    for (var _i = 0, indexes_2 = indexes; _i < indexes_2.length; _i++) {\n      var index = indexes_2[_i];\n      element = this.getElementByIndex(index);\n      if (element) {\n        this.performSelection(index, accumulation, element);\n      }\n    }\n  };\n  /**\n   * To remove the selection styles for multi selection process.\n   */\n  AccumulationSelection.prototype.removeMultiSelectEelments = function (accumulation, index, currentIndex, seriesCollection) {\n    var series;\n    for (var i = 0; i < index.length; i++) {\n      series = seriesCollection[index[i].series];\n      if (!this.checkEquals(index[i], currentIndex)) {\n        this.removeStyles(this.findElements(accumulation, series, index[i]), index[i]);\n        index.splice(i, 1);\n        i--;\n      }\n    }\n  };\n  /**\n   * To apply the opacity effect for accumulation chart series elements.\n   */\n  AccumulationSelection.prototype.blurEffect = function (pieId, visibleSeries) {\n    var visibility = this.checkVisibility(this.highlightDataIndexes) || this.checkVisibility(this.selectedDataIndexes); // legend click scenario\n    for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n      var series = visibleSeries_1[_i];\n      if (series.visible) {\n        this.checkSelectionElements(document.getElementById(pieId + '_SeriesCollection'), this.generateStyle(series), visibility);\n      }\n    }\n  };\n  /**\n   * To check selection elements by style class name.\n   */\n  AccumulationSelection.prototype.checkSelectionElements = function (element, className, visibility) {\n    var children = element.childNodes[0].childNodes;\n    var legendShape;\n    var elementClass;\n    var parentClass;\n    //let selectElement: Element = element;\n    for (var i = 0; i < children.length; i++) {\n      elementClass = children[i].getAttribute('class') || '';\n      parentClass = children[i].parentNode.getAttribute('class') || '';\n      if (this.accumulation.selectionMode !== 'None' || this.accumulation.highlightMode !== 'None') {\n        className = elementClass.indexOf('selection') > 0 || elementClass.indexOf('highlight') > 0 ? elementClass : className;\n        className = parentClass.indexOf('selection') > 0 || parentClass.indexOf('highlight') > 0 ? parentClass : className;\n      }\n      if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n        this.addSvgClass(children[i], this.unselected);\n      } else {\n        this.removeSvgClass(children[i], this.unselected);\n      }\n      if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n        this.addSvgClass(children[i], this.unselected);\n      } else {\n        // selectElement = children[i as number] as HTMLElement;\n        this.removeSvgClass(children[i], this.unselected);\n        this.removeSvgClass(children[i].parentNode, this.unselected);\n      }\n      if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n        legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + i);\n        if (legendShape) {\n          if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n            this.addSvgClass(legendShape, this.unselected);\n          } else {\n            this.removeSvgClass(legendShape, this.unselected);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To apply selection style for elements.\n   */\n  AccumulationSelection.prototype.applyStyles = function (elements, index) {\n    var accumulationTooltip = this.control.accumulationTooltipModule;\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var element = elements_1[_i];\n      var legendShape = void 0;\n      if (element) {\n        if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n          legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n          this.removeSvgClass(legendShape, legendShape.getAttribute('class'));\n          this.addSvgClass(legendShape, this.getSelectionClass(legendShape.id, index.point));\n        }\n        this.removeSvgClass(element.parentNode, this.unselected);\n        this.removeSvgClass(element, this.unselected);\n        var opacity = accumulationTooltip && accumulationTooltip.previousPoints.length > 0 && accumulationTooltip.previousPoints[0].point.index !== index.point ? accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n        element.setAttribute('opacity', opacity.toString());\n        this.addSvgClass(element, this.getSelectionClass(element.id, index.point));\n      }\n    }\n  };\n  /**\n   * To get selection style class name by id\n   */\n  AccumulationSelection.prototype.getSelectionClass = function (id, point) {\n    return this.generateStyle(this.control.series[indexFinder(id).series], point);\n  };\n  /**\n   * To remove selection style for elements.\n   */\n  AccumulationSelection.prototype.removeStyles = function (elements, index) {\n    var accumulationTooltip = this.control.accumulationTooltipModule;\n    var legendShape;\n    for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n      var element = elements_2[_i];\n      if (element) {\n        if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n          legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n          this.removeSvgClass(legendShape, this.getSelectionClass(legendShape.id, index.point));\n        }\n        var opacity = accumulationTooltip && accumulationTooltip.previousPoints.length > 0 && accumulationTooltip.previousPoints[0].point.index === index.point ? accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n        element.setAttribute('opacity', opacity.toString());\n        this.removeSvgClass(element, this.getSelectionClass(element.id, index.point));\n      }\n    }\n  };\n  /**\n   * To apply or remove selected elements index.\n   */\n  AccumulationSelection.prototype.addOrRemoveIndex = function (indexes, index, add) {\n    for (var i = 0; i < indexes.length; i++) {\n      if (this.checkEquals(indexes[i], index)) {\n        indexes.splice(i, 1);\n        i--;\n      }\n    }\n    if (add) {\n      indexes.push(index);\n    }\n  };\n  /**\n   * To check two index, point and series are equal\n   */\n  AccumulationSelection.prototype.checkEquals = function (first, second) {\n    return first.point === second.point && first.series === second.series;\n  };\n  /** @private */\n  AccumulationSelection.prototype.mouseMove = function (event) {\n    var accumulation = this.accumulation;\n    var targetElement = event.target;\n    if (accumulation.highlightMode !== 'None') {\n      if (!isNullOrUndefined(targetElement)) {\n        if (event.target.id.indexOf('text') > 1) {\n          targetElement = getElement(event.target.id.replace('text', 'shape'));\n        }\n        if (targetElement.hasAttribute('class') && targetElement.getAttribute('class').indexOf('highlight') > -1) {\n          return;\n        }\n        this.calculateSelectedElements(accumulation, event.target, event.type);\n        return;\n      }\n    }\n    if (accumulation.selectionMode === 'None') {\n      return;\n    }\n  };\n  /**\n   * To check selected points are visibility\n   */\n  AccumulationSelection.prototype.checkPointVisibility = function (selectedDataIndexes) {\n    var visible = false;\n    for (var _i = 0, selectedDataIndexes_1 = selectedDataIndexes; _i < selectedDataIndexes_1.length; _i++) {\n      var data = selectedDataIndexes_1[_i];\n      if (pointByIndex(data.point, this.control.visibleSeries[0].points).visible) {\n        visible = true;\n        break;\n      }\n    }\n    return visible;\n  };\n  /**\n   * Get module name.\n   */\n  AccumulationSelection.prototype.getModuleName = function () {\n    return 'AccumulationSelection';\n  };\n  /**\n   * To destroy the selection.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationSelection.prototype.destroy = function () {\n    // Destroy method performed here\n    this.removeEventListener();\n  };\n  return AccumulationSelection;\n}(BaseSelection);\nexport { AccumulationSelection };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Browser","extend","isNullOrUndefined","indexFinder","getElement","pointByIndex","Index","BaseSelection","selectionComplete","AccumulationSelection","_super","accumulation","_this","call","renderer","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","mouseClick","removeEventListener","off","initPrivateVariables","styleId","element","id","unselected","selectedDataIndexes","rectPoints","invokeSelection","series","visibleSeries","seriesStyles","currentMode","selectionMode","selectDataIndex","concatIndexes","generateStyle","point","selectionStyle","index","generateLegendClickStyle","eventType","findElements","getElementByIndex","elementId","control","document","getElementById","isAlreadySelected","targetElement","highlightMode","highlightDataIndexes","previousSelectedElement","parentNodeId","parentNode","isValidElement","indexOf","i","length","hasAttribute","getAttribute","removeAttribute","addOrRemoveIndex","performSelection","event","calculateSelectedElements","target","type","targetEle","getSeriesElement","childNodes","isNaN","selection","blurEffect","pointIndex","selectedPointValues","push","x","dataSource","xName","y","points","seriesIndex","args","name","selectedDataValues","cancel","trigger","selectedElements","isMultiSelect","removeMultiSelectEelments","className","getSelectionClass","removeStyles","enableBorderOnMouseMove","borderElement","split","removeSvgClass","applyStyles","addSvgClass","redrawSelection","removeSelectedElements","indexes","_i","indexes_1","legendSelection","replace","isPreSelected","seriesElements","indexes_2","currentIndex","seriesCollection","checkEquals","splice","pieId","visibility","checkVisibility","visibleSeries_1","visible","checkSelectionElements","children","legendShape","elementClass","parentClass","accumulationLegendModule","legendSettings","elements","accumulationTooltip","accumulationTooltipModule","elements_1","opacity","previousPoints","svgTooltip","setAttribute","toString","elements_2","add","first","second","checkPointVisibility","selectedDataIndexes_1","data","getModuleName","destroy"],"sources":["/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/HochschulederMedien/7. Semester/HOLA Serious Games/Medizinapp/vr_trail_medicine_app/frontend/node_modules/@syncfusion/ej2-charts/src/accumulation-chart/user-interaction/selection.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart Selection src file\n */\nimport { Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { indexFinder, getElement } from '../../common/utils/helper';\nimport { pointByIndex } from '../model/acc-base';\nimport { Index } from '../../common/model/base';\nimport { BaseSelection } from '../../common/user-interaction/selection';\nimport { selectionComplete } from '../../common/model/constants';\n/**\n * `AccumulationSelection` module handles the selection for accumulation chart.\n */\nvar AccumulationSelection = /** @class */ (function (_super) {\n    __extends(AccumulationSelection, _super);\n    function AccumulationSelection(accumulation) {\n        var _this = _super.call(this, accumulation) || this;\n        _this.accumulation = accumulation;\n        _this.renderer = accumulation.renderer;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for selection module.\n     */\n    AccumulationSelection.prototype.addEventListener = function () {\n        if (this.accumulation.isDestroyed) {\n            return;\n        }\n        //let cancelEvent: string = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.accumulation.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.accumulation.on('click', this.mouseClick, this);\n    };\n    /**\n     * UnBinding events for selection module.\n     */\n    AccumulationSelection.prototype.removeEventListener = function () {\n        if (this.accumulation.isDestroyed) {\n            return;\n        }\n        this.accumulation.off(Browser.touchMoveEvent, this.mouseMove);\n        this.accumulation.off('click', this.mouseClick);\n    };\n    /**\n     * To initialize the private variables\n     */\n    AccumulationSelection.prototype.initPrivateVariables = function (accumulation) {\n        this.styleId = accumulation.element.id + '_ej2_chart_selection';\n        this.unselected = accumulation.element.id + '_ej2_deselected';\n        this.selectedDataIndexes = [];\n        this.rectPoints = null;\n    };\n    /**\n     * Invoke selection for rendered chart.\n     *\n     * @param {AccumulationChart} accumulation Define the chart to invoke the selection.\n     * @returns {void}\n     */\n    AccumulationSelection.prototype.invokeSelection = function (accumulation) {\n        this.initPrivateVariables(accumulation);\n        this.series = extend({}, accumulation.visibleSeries, null, true);\n        this.seriesStyles();\n        this.currentMode = accumulation.selectionMode;\n        this.selectDataIndex(this.concatIndexes(accumulation.selectedDataIndexes, this.selectedDataIndexes), accumulation);\n    };\n    /**\n     * To get series selection style by series.\n     */\n    AccumulationSelection.prototype.generateStyle = function (series, point) {\n        return (series.selectionStyle || this.styleId + '_series_' + series.index + '_point_' + point);\n    };\n    /**\n     * To get series selection style while hovering legend\n     */\n    AccumulationSelection.prototype.generateLegendClickStyle = function (series, eventType) {\n        if (eventType === 'mousemove') {\n            this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n        }\n        else if (eventType === 'click') {\n            this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n        }\n        return (series.selectionStyle || this.styleId + '_series_' + series.index);\n    };\n    /**\n     * To get elements by index, series\n     */\n    AccumulationSelection.prototype.findElements = function (accumulation, series, index) {\n        return [this.getElementByIndex(index)];\n    };\n    /**\n     * To get series point element by index\n     */\n    AccumulationSelection.prototype.getElementByIndex = function (index) {\n        var elementId = this.control.element.id + '_Series_' + index.series + '_Point_' + index.point;\n        return document.getElementById(elementId);\n    };\n    /**\n     * To find the selected element.\n     *\n     * @return {void}\n     * @private\n     */\n    AccumulationSelection.prototype.isAlreadySelected = function (targetElement, eventType) {\n        if (eventType === 'mousemove') {\n            this.currentMode = this.accumulation.highlightMode;\n            this.highlightDataIndexes = [];\n            this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n        }\n        else if (eventType === 'click') {\n            this.currentMode = this.accumulation.selectionMode;\n            this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n        }\n        if (this.accumulation.highlightMode !== 'None' && this.accumulation.selectionMode === 'None') {\n            if (eventType === 'click') {\n                return false;\n            }\n        }\n        if ((this.accumulation.highlightMode !== 'None' && this.previousSelectedElement && this.previousSelectedElement[0])) {\n            var parentNodeId = targetElement.parentNode.id;\n            var isValidElement = void 0;\n            if (targetElement.parentNode) {\n                isValidElement = (parentNodeId.indexOf('SeriesGroup') > 0 ||\n                    parentNodeId.indexOf('SymbolGroup') > 0) ? true : false;\n            }\n            for (var i = 0; i < this.previousSelectedElement.length; i++) {\n                if (this.previousSelectedElement[i].hasAttribute('class')) {\n                    if (this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1 && (isValidElement || eventType === 'click')) {\n                        this.previousSelectedElement[i].removeAttribute('class');\n                        this.addOrRemoveIndex(this.highlightDataIndexes, indexFinder(this.previousSelectedElement[i].id));\n                    }\n                    else if (!isValidElement && this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1) {\n                        this.performSelection(indexFinder(this.previousSelectedElement[i].id), this.accumulation, this.previousSelectedElement[i]);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * To calculate selected elements on mouse click or touch\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.mouseClick = function (accumulation, event) {\n        this.calculateSelectedElements(accumulation, event.target, event.type);\n    };\n    /**\n     * To calculate selected elements on mouse click or touch\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.calculateSelectedElements = function (accumulation, targetEle, eventType) {\n        if (isNullOrUndefined(targetEle)) {\n            return;\n        }\n        if ((accumulation.highlightMode === 'None' && accumulation.selectionMode === 'None') ||\n            targetEle.id.indexOf(accumulation.element.id + '_') === -1) {\n            return;\n        }\n        if (eventType === 'mousemove') {\n            if (!isNullOrUndefined(targetEle.parentNode) && targetEle.parentNode.hasAttribute('class') &&\n                (targetEle.parentNode.getAttribute('class').indexOf('highlight') > 0 ||\n                    targetEle.parentNode.getAttribute('class').indexOf('selection') > 0)) {\n                return;\n            }\n        }\n        if (targetEle.getAttribute('id').indexOf('_connector_') > -1) {\n            return;\n        }\n        else {\n            this.isAlreadySelected(targetEle, eventType);\n            if (targetEle.id.indexOf('_Series_') > -1 || targetEle.id.indexOf('_datalabel_') > -1) {\n                this.performSelection(indexFinder(targetEle.id), accumulation, targetEle);\n            }\n        }\n    };\n    /**\n     * To perform the selection process based on index and element.\n     */\n    AccumulationSelection.prototype.performSelection = function (index, accumulation, element) {\n        element = element.id.indexOf('datalabel') > -1 ?\n            accumulation.getSeriesElement().childNodes[index.series].childNodes[index.point]\n            : element;\n        switch (this.currentMode) {\n            case 'Point':\n                if (!isNaN(index.point)) {\n                    this.selection(accumulation, index, [element]);\n                    this.selectionComplete(accumulation, accumulation.series[0]);\n                    this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n                }\n                break;\n        }\n    };\n    /**\n     *  Method to get the selected data index\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.selectionComplete = function (accumulation, series) {\n        var pointIndex;\n        var selectedPointValues = [];\n        for (var i = 0; i < this.selectedDataIndexes.length; i++) {\n            pointIndex = this.selectedDataIndexes[i].point;\n            if (!isNaN(pointIndex)) {\n                selectedPointValues.push({\n                    x: series.dataSource[pointIndex][series.xName], y: series.points[pointIndex].y,\n                    seriesIndex: this.selectedDataIndexes[i].series, pointIndex: pointIndex\n                });\n            }\n        }\n        var args = {\n            name: selectionComplete,\n            selectedDataValues: selectedPointValues,\n            cancel: false\n        };\n        accumulation.trigger(selectionComplete, args);\n    };\n    /**\n     * To select the element by index. Adding or removing selection style class name.\n     */\n    AccumulationSelection.prototype.selection = function (accumulation, index, selectedElements) {\n        if (!accumulation.isMultiSelect && this.styleId.indexOf('highlight') === -1 &&\n            accumulation.selectionMode !== 'None') {\n            this.removeMultiSelectEelments(accumulation, this.selectedDataIndexes, index, accumulation.series);\n        }\n        var className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n        if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id, index.point)) > -1) {\n            this.removeStyles(selectedElements, index);\n            if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n                this.addOrRemoveIndex(this.highlightDataIndexes, index);\n            }\n            else {\n                this.addOrRemoveIndex(this.selectedDataIndexes, index);\n            }\n            if (accumulation.enableBorderOnMouseMove) {\n                var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n                if (!isNullOrUndefined(borderElement)) {\n                    this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n                }\n            }\n        }\n        else {\n            this.previousSelectedElement = accumulation.highlightMode !== 'None' ? selectedElements : [];\n            if (className.indexOf('selection') < 0) {\n                this.applyStyles(selectedElements, index);\n            }\n            if (accumulation.enableBorderOnMouseMove) {\n                var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n                if (!isNullOrUndefined(borderElement)) {\n                    this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n                    this.addSvgClass(borderElement, selectedElements[0].getAttribute('class'));\n                }\n            }\n            if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n                this.addOrRemoveIndex(this.highlightDataIndexes, index, true);\n            }\n            else {\n                this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n            }\n        }\n    };\n    /**\n     * To redraw the selection process on accumulation chart refresh.\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.redrawSelection = function (accumulation) {\n        var selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n        var highlightDataIndexes = extend([], this.highlightDataIndexes, null, true);\n        if (this.styleId.indexOf('highlight') > 0 && highlightDataIndexes.length > 0) {\n            this.removeSelectedElements(accumulation, this.highlightDataIndexes);\n            selectedDataIndexes = highlightDataIndexes;\n        }\n        else {\n            this.removeSelectedElements(accumulation, this.selectedDataIndexes);\n        }\n        this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        this.selectDataIndex(selectedDataIndexes, accumulation);\n    };\n    /**\n     * To remove the selected elements style classes by indexes.\n     */\n    AccumulationSelection.prototype.removeSelectedElements = function (accumulation, indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            this.removeStyles([this.getElementByIndex(index)], index);\n        }\n    };\n    /**\n     * To perform the selection for legend elements.\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.legendSelection = function (accumulation, series, pointIndex, targetEle, eventType) {\n        if (eventType === 'mousemove') {\n            if (targetEle.id.indexOf('text') > 1) {\n                targetEle = getElement(targetEle.id.replace('text', 'shape'));\n            }\n            if (targetEle.hasAttribute('class') && (targetEle.getAttribute('class').indexOf('highlight') > -1 ||\n                targetEle.getAttribute('class').indexOf('selection') > -1)) {\n                return;\n            }\n            this.currentMode = this.accumulation.highlightMode;\n        }\n        var isPreSelected = this.isAlreadySelected(targetEle, eventType);\n        if (isPreSelected) {\n            //let element: Element = <Element>accumulation.getSeriesElement().childNodes[series as number].childNodes[pointIndex as number];\n            //let seriesStyle: string = this.generateLegendClickStyle(accumulation.visibleSeries[series as number], eventType);\n            var seriesElements = accumulation.getSeriesElement().\n                childNodes[series].childNodes[pointIndex];\n            this.selection(accumulation, new Index(series, pointIndex), [seriesElements]);\n            this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        }\n    };\n    /**\n     * To select the element by selected data indexes.\n     */\n    AccumulationSelection.prototype.selectDataIndex = function (indexes, accumulation) {\n        var element;\n        for (var _i = 0, indexes_2 = indexes; _i < indexes_2.length; _i++) {\n            var index = indexes_2[_i];\n            element = this.getElementByIndex(index);\n            if (element) {\n                this.performSelection(index, accumulation, element);\n            }\n        }\n    };\n    /**\n     * To remove the selection styles for multi selection process.\n     */\n    AccumulationSelection.prototype.removeMultiSelectEelments = function (accumulation, index, currentIndex, seriesCollection) {\n        var series;\n        for (var i = 0; i < index.length; i++) {\n            series = seriesCollection[index[i].series];\n            if (!this.checkEquals(index[i], currentIndex)) {\n                this.removeStyles(this.findElements(accumulation, series, index[i]), index[i]);\n                index.splice(i, 1);\n                i--;\n            }\n        }\n    };\n    /**\n     * To apply the opacity effect for accumulation chart series elements.\n     */\n    AccumulationSelection.prototype.blurEffect = function (pieId, visibleSeries) {\n        var visibility = (this.checkVisibility(this.highlightDataIndexes) ||\n            this.checkVisibility(this.selectedDataIndexes)); // legend click scenario\n        for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n            var series = visibleSeries_1[_i];\n            if (series.visible) {\n                this.checkSelectionElements(document.getElementById(pieId + '_SeriesCollection'), this.generateStyle(series), visibility);\n            }\n        }\n    };\n    /**\n     * To check selection elements by style class name.\n     */\n    AccumulationSelection.prototype.checkSelectionElements = function (element, className, visibility) {\n        var children = element.childNodes[0].childNodes;\n        var legendShape;\n        var elementClass;\n        var parentClass;\n        //let selectElement: Element = element;\n        for (var i = 0; i < children.length; i++) {\n            elementClass = children[i].getAttribute('class') || '';\n            parentClass = children[i].parentNode.getAttribute('class') || '';\n            if (this.accumulation.selectionMode !== 'None' || this.accumulation.highlightMode !== 'None') {\n                className = elementClass.indexOf('selection') > 0 ||\n                    elementClass.indexOf('highlight') > 0 ? elementClass : className;\n                className = (parentClass.indexOf('selection') > 0 ||\n                    parentClass.indexOf('highlight') > 0) ? parentClass : className;\n            }\n            if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                this.removeSvgClass(children[i], this.unselected);\n            }\n            if (elementClass.indexOf(className) === -1 &&\n                parentClass.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                // selectElement = children[i as number] as HTMLElement;\n                this.removeSvgClass(children[i], this.unselected);\n                this.removeSvgClass(children[i].parentNode, this.unselected);\n            }\n            if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + i);\n                if (legendShape) {\n                    if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                        this.addSvgClass(legendShape, this.unselected);\n                    }\n                    else {\n                        this.removeSvgClass(legendShape, this.unselected);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To apply selection style for elements.\n     */\n    AccumulationSelection.prototype.applyStyles = function (elements, index) {\n        var accumulationTooltip = this.control.accumulationTooltipModule;\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var legendShape = void 0;\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, legendShape.getAttribute('class'));\n                    this.addSvgClass(legendShape, this.getSelectionClass(legendShape.id, index.point));\n                }\n                this.removeSvgClass(element.parentNode, this.unselected);\n                this.removeSvgClass(element, this.unselected);\n                var opacity = accumulationTooltip && (accumulationTooltip.previousPoints.length > 0 &&\n                    accumulationTooltip.previousPoints[0].point.index !== index.point) ?\n                    accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n                element.setAttribute('opacity', opacity.toString());\n                this.addSvgClass(element, this.getSelectionClass(element.id, index.point));\n            }\n        }\n    };\n    /**\n     * To get selection style class name by id\n     */\n    AccumulationSelection.prototype.getSelectionClass = function (id, point) {\n        return this.generateStyle(this.control.series[indexFinder(id).series], point);\n    };\n    /**\n     * To remove selection style for elements.\n     */\n    AccumulationSelection.prototype.removeStyles = function (elements, index) {\n        var accumulationTooltip = this.control.accumulationTooltipModule;\n        var legendShape;\n        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n            var element = elements_2[_i];\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, this.getSelectionClass(legendShape.id, index.point));\n                }\n                var opacity = accumulationTooltip && accumulationTooltip.previousPoints.length > 0\n                    && (accumulationTooltip.previousPoints[0].point.index === index.point) ?\n                    accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n                element.setAttribute('opacity', opacity.toString());\n                this.removeSvgClass(element, this.getSelectionClass(element.id, index.point));\n            }\n        }\n    };\n    /**\n     * To apply or remove selected elements index.\n     */\n    AccumulationSelection.prototype.addOrRemoveIndex = function (indexes, index, add) {\n        for (var i = 0; i < indexes.length; i++) {\n            if (this.checkEquals(indexes[i], index)) {\n                indexes.splice(i, 1);\n                i--;\n            }\n        }\n        if (add) {\n            indexes.push(index);\n        }\n    };\n    /**\n     * To check two index, point and series are equal\n     */\n    AccumulationSelection.prototype.checkEquals = function (first, second) {\n        return ((first.point === second.point) && (first.series === second.series));\n    };\n    /** @private */\n    AccumulationSelection.prototype.mouseMove = function (event) {\n        var accumulation = this.accumulation;\n        var targetElement = event.target;\n        if (accumulation.highlightMode !== 'None') {\n            if (!isNullOrUndefined(targetElement)) {\n                if (event.target.id.indexOf('text') > 1) {\n                    targetElement = getElement(event.target.id.replace('text', 'shape'));\n                }\n                if ((targetElement).hasAttribute('class') && (targetElement).getAttribute('class').indexOf('highlight') > -1) {\n                    return;\n                }\n                this.calculateSelectedElements(accumulation, event.target, event.type);\n                return;\n            }\n        }\n        if (accumulation.selectionMode === 'None') {\n            return;\n        }\n    };\n    /**\n     * To check selected points are visibility\n     */\n    AccumulationSelection.prototype.checkPointVisibility = function (selectedDataIndexes) {\n        var visible = false;\n        for (var _i = 0, selectedDataIndexes_1 = selectedDataIndexes; _i < selectedDataIndexes_1.length; _i++) {\n            var data = selectedDataIndexes_1[_i];\n            if (pointByIndex(data.point, this.control.visibleSeries[0].points).visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    };\n    /**\n     * Get module name.\n     */\n    AccumulationSelection.prototype.getModuleName = function () {\n        return 'AccumulationSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationSelection.prototype.destroy = function () {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return AccumulationSelection;\n}(BaseSelection));\nexport { AccumulationSelection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}